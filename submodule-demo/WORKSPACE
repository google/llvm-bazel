# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# Demonstration of using these build files with a llvm-project submodule.

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

#TODO(gcmn): When Bazel 3.5 is out, consistently use hyphens for repo aliases,
# as the overeager and non-uniform validation preventing these has gone away in
# https://github.com/bazelbuild/bazel/pull/11838.

maybe(
  local_repository,
  name = "llvm_bazel",
  path = "llvm-bazel-submodule/llvm-bazel",
)

# We only have to do these shenanigans because the path we're looking for is
# outside of any repository Bazel knows about. We can't just use a relative ".."
# path with a reference to this workspace because then that would break out of
# the repo alias into the encapsulating Bazel outputBase and the files we're
# looking for do not exist there.
maybe(
  new_local_repository,
  name = "llvm_project_raw",
  path = "../third_party/llvm-project",
  build_file_content = "",
)

load("@llvm_bazel//:configure.bzl", "llvm_configure")

maybe(
  llvm_configure,
  name = "llvm-project",
  src_path = ".",
  src_workspace = "@llvm_project_raw//:WORKSPACE",
)

maybe(
    http_archive,
    name = "zlib",
    build_file = "@llvm_bazel//third_party_build:zlib.BUILD",
    sha256 = "c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1",
    strip_prefix = "zlib-1.2.11",
    urls = [
        "https://storage.googleapis.com/mirror.tensorflow.org/zlib.net/zlib-1.2.11.tar.gz",
        "https://zlib.net/zlib-1.2.11.tar.gz",
    ],
)
